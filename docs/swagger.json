{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/login/{guid}": {
            "post": {
                "description": "Генерирует access и refresh токен по GUID пользователя для авторизации в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Логин в систему",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guid авторизируемого пользователя",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.LoginTokens"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/refresh": {
            "post": {
                "description": "Генерирует access и refresh токен по ранее предоставленным при авторизации токеном",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токенов пользователя",
                "parameters": [
                    {
                        "description": "Tokes",
                        "name": "tokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.LoginTokens"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе с заданным именем. Возвращает информацию о пользователе с GUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterUserDtoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/user/deactivate": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Блокирует пользователя пользователя по токенгу авторизации. Необходим заголовок \"Authorization\": \"Bearer {token}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Диактивация авторизованного пользователя",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок авторизации. Пример: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/user/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "По токену доступа возвращает информацию о пользователе. Необходим заголовок \"Authorization\": \"Bearer {token}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение GUID текущего пользователя и информации о нем.\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок авторизации. Пример: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.LoginTokens"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/user/unlogin": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "По токену авторизации деактивирует пользователя так, что он не может запросить user/me или /refresh. Необходим заголовок \"Authorization\": \"Bearer {token}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Деавторизация токена пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок авторизации. Пример: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputil.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid headers muts be \"Authorization\": \"Bearer {token}",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook": {
            "get": {
                "description": "Информирует о правильной работе запроса к вуб-хуку",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook"
                ],
                "summary": "Тестовый веб-хук который позволяет проверить работы колбека.\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок авторизации. Пример: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseHTTP"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.ResponseHTTP": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.LoginTokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3NTE4ODM0NDIsInN1YiI6ImJhciJ9.1ZO0Znrv0CU1gYI52o7tTP1jHjzmpCi7ufyyStFcygeHWDCFZMya-12Uuswy_8saqxVs0mZx25hApJ3bpbPozA"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "tmKpWaddK0DH5ldOEAQTUaWeH7hVabpH82cSLBzKw1ejXReJ2H+BHIRiLs7S3Nbm46c3sDko"
                }
            }
        },
        "models.RegisterUserDtoReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Nikolay"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2025-07-07T07:01:27.73104763Z"
                },
                "deactivated": {
                    "type": "boolean",
                    "example": false
                },
                "guid": {
                    "type": "string",
                    "example": " a81bc81b-dead-4e5d-abff-90865d1e13b1"
                },
                "lastLoginAt": {
                    "type": "string",
                    "example": "2025-07-07T07:01:27.73104763Z"
                },
                "name": {
                    "type": "string",
                    "example": "Nikolay"
                }
            }
        }
    }
}